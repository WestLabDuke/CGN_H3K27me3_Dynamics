{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww21080\viewh15700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 library(seqsetvis)\
library(tidyverse)\
library(ChIPseeker)\
library(TxDb.Mmusculus.UCSC.mm10.knownGene)\
txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
# Import peak_set_1.bed and peak_set_2.bed\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
peak_set_1 <- read_delim(\'93/PATH/peak_set_1.bed, "\\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 peak_set_2 <- read_delim(\'93/PATH/peak_set_2.bed, "\\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
# Format and convert to GRanges objects\
\
colnames(peak_set_1) = c("Chr", "Start", "End")\
peakID = paste0("loop", 1:nrow(peak_set_1))\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 peak_set_1 = data.frame(GeneID = peakID, peak_set_1, Strand = rep("",nrow(peak_set_1)))\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 peak_set_1_GRanges <- makeGRangesFromDataFrame(peak_set_1, seqinfo=NULL, seqnames.field=c("seqnames","seqname","chromosome","chrom","Chr","chromosome_name","seqid","Gene_ID"),\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0                                          start.field="Start", end.field=c("End","Stop"), ignore.strand=TRUE)\
\
colnames(peak_set_2) = c("Chr", "Start", "End")\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 peakID = paste0("loop", 1:nrow(peak_set_2))\
peak_set_2 = data.frame(GeneID = peakID, peak_set_2, Strand = rep("",nrow(peak_set_2)))\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 peak_set_2_GRanges <- makeGRangesFromDataFrame(peak_set_2, seqinfo=NULL, seqnames.field=c("seqnames","seqname","chromosome","chrom","Chr","chromosome_name","seqid","Gene_ID"),\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0                                           start.field="Start", end.field=c("End","Stop"), ignore.strand=TRUE)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
# Using SeqSetVis to Compute Overlapping Regions & Saving Overlapped Regions\
\
overlap <- GRangesList(peak_set_1_GRanges, peak_set_2_GRanges)\
overlap <- ssvOverlapIntervalSets(overlap)\
ssvFeatureEuler(overlap)\
ssvFeatureVenn(overlap)\
\
# Writing Overlapping Granges into a new object\
\
overlap <- as.data.frame(overlap)\
overlap_both <- overlap %>%\
  filter(set_A==TRUE & set_B==TRUE)\
\
overlap_GRanges <- makeGRangesFromDataFrame(overlap_both, seqinfo=NULL, seqnames.field=c("seqnames","seqname","chromosome","chrom","Chr","chromosome_name","seqid","Gene_ID"),\
                                          start.field="Start", end.field=c("End","Stop"), ignore.strand=TRUE)\
\
peakAnno <- annotatePeak(overlap_GRanges, tssRegion=c(-3000,3000), TxDb=txdb, annoDb="org.Mm.eg.db")\
annotated_overlap <- as.data.frame(peakAnno)\
\
write.csv(annotated_overlap, file=\'93Overlapping Peaks Annotated.csv")}